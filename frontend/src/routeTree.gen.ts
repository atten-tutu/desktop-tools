/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as UploadRouteImport } from './routes/upload'
import { Route as TimestampRouteImport } from './routes/timestamp'
import { Route as ThemeRouteImport } from './routes/theme'
import { Route as MarketRouteImport } from './routes/market'
import { Route as Float_ballRouteImport } from './routes/float_ball'
import { Route as IndexRouteImport } from './routes/index'

const UploadRoute = UploadRouteImport.update({
  id: '/upload',
  path: '/upload',
  getParentRoute: () => rootRouteImport,
} as any)
const TimestampRoute = TimestampRouteImport.update({
  id: '/timestamp',
  path: '/timestamp',
  getParentRoute: () => rootRouteImport,
} as any)
const ThemeRoute = ThemeRouteImport.update({
  id: '/theme',
  path: '/theme',
  getParentRoute: () => rootRouteImport,
} as any)
const MarketRoute = MarketRouteImport.update({
  id: '/market',
  path: '/market',
  getParentRoute: () => rootRouteImport,
} as any)
const Float_ballRoute = Float_ballRouteImport.update({
  id: '/float_ball',
  path: '/float_ball',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/float_ball': typeof Float_ballRoute
  '/market': typeof MarketRoute
  '/theme': typeof ThemeRoute
  '/timestamp': typeof TimestampRoute
  '/upload': typeof UploadRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/float_ball': typeof Float_ballRoute
  '/market': typeof MarketRoute
  '/theme': typeof ThemeRoute
  '/timestamp': typeof TimestampRoute
  '/upload': typeof UploadRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/float_ball': typeof Float_ballRoute
  '/market': typeof MarketRoute
  '/theme': typeof ThemeRoute
  '/timestamp': typeof TimestampRoute
  '/upload': typeof UploadRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/float_ball'
    | '/market'
    | '/theme'
    | '/timestamp'
    | '/upload'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/float_ball' | '/market' | '/theme' | '/timestamp' | '/upload'
  id:
    | '__root__'
    | '/'
    | '/float_ball'
    | '/market'
    | '/theme'
    | '/timestamp'
    | '/upload'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  Float_ballRoute: typeof Float_ballRoute
  MarketRoute: typeof MarketRoute
  ThemeRoute: typeof ThemeRoute
  TimestampRoute: typeof TimestampRoute
  UploadRoute: typeof UploadRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/upload': {
      id: '/upload'
      path: '/upload'
      fullPath: '/upload'
      preLoaderRoute: typeof UploadRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/timestamp': {
      id: '/timestamp'
      path: '/timestamp'
      fullPath: '/timestamp'
      preLoaderRoute: typeof TimestampRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/theme': {
      id: '/theme'
      path: '/theme'
      fullPath: '/theme'
      preLoaderRoute: typeof ThemeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/market': {
      id: '/market'
      path: '/market'
      fullPath: '/market'
      preLoaderRoute: typeof MarketRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/float_ball': {
      id: '/float_ball'
      path: '/float_ball'
      fullPath: '/float_ball'
      preLoaderRoute: typeof Float_ballRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  Float_ballRoute: Float_ballRoute,
  MarketRoute: MarketRoute,
  ThemeRoute: ThemeRoute,
  TimestampRoute: TimestampRoute,
  UploadRoute: UploadRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
